{"version":3,"sources":["styles/img/favicon-black.ico","components/Head.js","sections/Header.js","utils/insertLineBreaks.js","components/TypeAnimation/index.js","sections/Description.js","sections/FAQ.js","components/Frame.js","components/ExternalLink.js","sections/Credits.js","sections/Start.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","Helmet","rel","type","href","faviconBlack","sizes","render","className","onClick","changeColor","onMouseEnter","state","isWhite","React","Component","insertLineBreaks","text","lines","split","map","line","index","key","length","TypeAnimation","largestText","texts","reduce","maxIndex","currentTextIndex","currentLetterIndex","caretVisible","caretCooldownVisibility","this","_ismounted","typeLetterRandomInterval","isVisible","setState","setTimeout","caretCooldownVisibilityInterval","Math","floor","random","letterTypeInterval","caretFlashCaller","setInterval","caretFlashInterval","clearInterval","currentTextCaller","currentText","slice","children","to","target","newTab","ExternalLink","Head","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,2C,yLCM5B,WAAAC,GAAK,OAClB,kBAACC,EAAA,EAAD,KACE,mFAGA,0BAAMC,IAAI,OAAOC,KAAK,YAAYC,KAAMC,IAAcC,MAAM,Y,oDCP9D,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAMRO,OAAS,kBACP,yBAAKC,UAAU,UACb,yBACEA,UAAU,eACVC,QAAS,kBAAM,EAAKT,MAAMU,eAC1BC,aAAc,kBAAM,EAAKX,MAAMU,mBAVnC,EAAKE,MAAQ,CACXC,SAAS,GAHM,E,UADQC,IAAMC,W,yBCApB,SAASC,EAAiBC,GACvC,IAAMC,EAAQD,EAAKE,MAAM,MAMzB,OAL2BD,EAAME,KAAI,SAACC,EAAMC,GAAP,OACnC,0BAAMC,IAAKD,GACRD,EAAMH,EAAMM,OAAS,EAAIF,GAAS,iCCDzC,IAKMG,E,kDACJ,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXc,YAAa1B,EAAM2B,MAChBC,QAAO,SAACC,EAAUZ,EAAMK,EAAOK,GAAxB,OACNV,EAAKO,OAASG,EAAME,GAAUL,OAASF,EAAQO,IAAU,GAE7DC,iBAAkB,EAClBC,mBAAoB,EACpBC,cAAc,EACdC,yBAAyB,GAVV,E,gEAcE,IAAD,OAClBC,KAAKC,YAAa,GAGe,SAA3BC,IACA,EAAKD,aACH,EAAKnC,MAAMqC,WAAa,EAAKzB,MAAMmB,mBAAqB,EAAK/B,MAAM2B,MAAM,EAAKf,MAAMkB,kBAAkBN,SACxG,EAAKc,SAAS,CACZL,yBAAyB,EACzBF,mBAAoB,EAAKnB,MAAMmB,mBAAqB,IAEtDQ,YAAW,kBAAM,EAAKD,SAAS,CAACL,yBAAyB,MACzD,EAAKjC,MAAMwC,iCA7BmB,MA+BhCD,WAAWH,EACTK,KAAKC,OAAOD,KAAKE,SAAW,KAAO,EAAK3C,MAAM4C,oBAlC7B,OAqCvBR,GAYAF,KAAKW,iBAAmBC,aAAY,WAC9B,EAAKX,YACP,EAAKG,SAAS,CAACN,cAAe,EAAKpB,MAAMoB,iBAC1CE,KAAKlC,MAAM+C,oBAnDS,O,6CAuDvBb,KAAKC,YAAa,EAClBa,cAAcd,KAAKe,mBACnBD,cAAcd,KAAKW,oB,+BAInB,IAAMK,EAAchB,KAAKlC,MAAM2B,MAAMO,KAAKtB,MAAMkB,kBAC7CqB,MAAM,EAAGjB,KAAKtB,MAAMmB,oBAEvB,OACE,yBAAKvB,UAAU,6BACb,yBAAKA,UAAU,kCACZQ,EAAiBkB,KAAKlC,MAAM2B,MAAMO,KAAKtB,MAAMc,eAEhD,yBAAKlB,UAAU,gCACZQ,EAAiBkC,GAClB,yBAAK1C,UAAW,2BACZ0B,KAAKtB,MAAMoB,cAAgBE,KAAKtB,MAAMqB,0BAA4B,mCADtE,W,GApEkBlB,aA6Eb,WAAAf,GAAK,OAClB,kBAAC,IAAD,KACE,kBAAC,EACKA,K,oDCrFR,WAAYA,GAAQ,IAAD,8BACjB,cAAMA,IAIRO,OAAS,kBACP,yBAAKC,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACEmB,MAAO,CAAC,yjEAIZ,yBAAKnB,UAAU,kBACb,kBAAC,EAAD,CACEmB,MAAO,CAAC,0EAIZ,yBAAKnB,UAAU,kBACb,kBAAC,EAAD,CACEmB,MAAO,CAAC,06FAIZ,yBAAKnB,UAAU,kBACb,kBAAC,EAAD,CACEmB,MAAO,CAAC,s/IAIZ,yBAAKnB,UAAU,kBACb,kBAAC,EAAD,CACEmB,MAAO,CAAC,gmDAIZ,yBAAKnB,UAAU,kBACb,kBAAC,EAAD,CACEmB,MAAO,CAAC,6EAtChB,EAAKf,MAAQ,GAFI,E,UADQE,IAAMC,W,oDCDjC,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAIRO,OAAS,kBACP,yBAAKC,UAAU,MAJf,EAAKI,MAAQ,GAFI,E,UADQE,IAAMC,W,oDCCjC,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAIRO,OAAS,kBACP,yBAAKC,UAAU,SACb,yBAAKA,UAAU,8DACf,yBAAKA,UAAU,+DACf,yBAAKA,UAAU,oEACf,yBAAKA,UAAU,qEAGZ,EAAKR,MAAMoD,WAXhB,EAAKxC,MAAQ,GAFI,E,UADQE,IAAMC,WCDpB,WAAAf,GAAK,OAClB,uBACEQ,UAAWR,EAAMQ,UACjBJ,KAAMJ,EAAMqD,GACZC,OAAQtD,EAAMuD,OAAS,SAAW,GAClCrD,IAAI,sBACJO,QAAS,kBAAMT,EAAMU,eACrBC,aAAc,kBAAMX,EAAMU,gBAEzBV,EAAMoD,W,oDCJT,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IAIRO,OAAS,kBACP,yBAAKC,UAAU,aACb,kBAAC,EAAD,KACE,yBAAKA,UAAU,WACb,6HADF,sGAIE,6BAJF,yFAKkB,kBAACgD,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,oCAA7D,6EALlB,WAKiJ,kBAACG,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,uCAA7D,iEAC/I,6BANF,+JAOiC,kBAACG,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,kCAA7D,+FAPjC,WAOiK,kBAACG,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,6BAA7D,+FAC/J,6BARF,qDASY,kBAACG,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,qCAA7D,iEACV,6BAVF,0CAWW,kBAACG,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,oCAA7D,iEACT,6BAZF,+CAaW,kBAACG,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,yCAA7D,uEACT,6BACA,6BAfF,4IAgB6B,kBAACG,EAAD,CAAcD,QAAM,EAAC7C,YAAa,EAAKV,MAAMU,YAAa2C,GAAG,kCAA7D,yFAC3B,6BACA,6BAlBF,goBANJ,EAAKzC,MAAQ,GAFI,E,UADQE,IAAMC,W,oDCFjC,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAIRO,OAAS,kBACP,yBAAKC,UAAU,MAJf,EAAKI,MAAQ,GAFI,E,UADQE,IAAMC,W,oDCQjC,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAORO,OAAS,kBACP,yBAAKC,UAAS,mBAAc,EAAKI,MAAMC,QAAU,QAAU,UACzD,kBAAC4C,EAAD,MACA,kBAAC,EAAD,CAAQ/C,YAAa,kBAAM,EAAK4B,SAAS,CAACzB,SAAU,EAAKD,MAAMC,aAC/D,kBAAC,EAAD,CAAaH,YAAa,kBAAM,EAAK4B,SAAS,CAACzB,SAAU,EAAKD,MAAMC,aACpE,kBAAC,EAAD,CAAKH,YAAa,kBAAM,EAAK4B,SAAS,CAACzB,SAAU,EAAKD,MAAMC,aAC5D,kBAAC,EAAD,CAASH,YAAa,kBAAM,EAAK4B,SAAS,CAACzB,SAAU,EAAKD,MAAMC,aAChE,kBAAC,EAAD,CAAOH,YAAa,kBAAM,EAAK4B,SAAS,CAACzB,SAAU,EAAKD,MAAMC,eAZhE,EAAKD,MAAQ,CACXC,SAAS,GAJM,E,UADQC,IAAMC,WCEf2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASxD,OACP,kBAAC,IAAMyD,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9de4cf3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon-black.1f758ba8.ico\";","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport faviconBlack from 'styles/img/favicon-black.ico'\n\n\nexport default props =>\n  <Helmet>\n    <title>\n      ВНИМАНИЕ\n    </title>\n    <link rel=\"icon\" type=\"image/png\" href={faviconBlack} sizes=\"64x64\" />\n  </Helmet>","import React from 'react'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isWhite: true\n    }\n  }\n\n  render = () =>\n    <div className=\"Header\">\n      <div\n        className=\"Header__logo\"\n        onClick={() => this.props.changeColor()}\n        onMouseEnter={() => this.props.changeColor()}\n      />\n    </div>\n}","import React from 'react'\n\n\nexport default function insertLineBreaks(text) {\n  const lines = text.split(\"\\n\")\n  const textWithLineBreaks = lines.map((line, index) =>\n    <span key={index}>\n      {line}{lines.length - 1 > index && <br />}\n    </span>\n  )\n  return textWithLineBreaks\n}\n","import React, { Component } from 'react'\nimport TrackVisibility from 'react-on-screen'\n\nimport insertLineBreaks from 'utils/insertLineBreaks'\n\n\nconst textChangeInterval = 30000\nconst letterTypeInterval = 50\nconst caretFlashInterval = 600\nconst caretCooldownVisibilityInterval = 100\n\nclass TypeAnimation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      largestText: props.texts\n        .reduce((maxIndex, text, index, texts) =>\n          text.length > texts[maxIndex].length ? index : maxIndex, 0\n        ),\n      currentTextIndex: 0,\n      currentLetterIndex: 0,\n      caretVisible: true,\n      caretCooldownVisibility: false,\n    }\n  }\n\n  componentDidMount() {\n    this._ismounted = true\n\n    /* Type Letter */\n    const typeLetterRandomInterval = () => {\n      if (this._ismounted) {\n        if (this.props.isVisible && this.state.currentLetterIndex < this.props.texts[this.state.currentTextIndex].length) {\n          this.setState({\n            caretCooldownVisibility: true,\n            currentLetterIndex: this.state.currentLetterIndex + 1,\n          })\n          setTimeout(() => this.setState({caretCooldownVisibility: false}),\n          this.props.caretCooldownVisibilityInterval || caretCooldownVisibilityInterval)\n        }\n        setTimeout(typeLetterRandomInterval,\n          Math.floor((Math.random() + .5) * (this.props.letterTypeInterval || letterTypeInterval)))\n      }\n    }\n    typeLetterRandomInterval()\n\n    /* Change word */\n    // this.currentTextCaller = setInterval(() => {\n    //   if (this._ismounted)\n    //     this.setState({\n    //       currentTextIndex: (this.state.currentTextIndex + 1) % this.props.texts.length,\n    //       currentLetterIndex: 0,\n    //     })\n    // }, this.props.textChangeInterval || textChangeInterval)\n\n    /* Flashy caret */\n    this.caretFlashCaller = setInterval(() => {\n      if (this._ismounted)\n        this.setState({caretVisible: !this.state.caretVisible})\n    }, this.props.caretFlashInterval || caretFlashInterval)\n  }\n\n  componentWillUnmount() {\n    this._ismounted = false\n    clearInterval(this.currentTextCaller)\n    clearInterval(this.caretFlashCaller)\n  }\n\n  render () {\n    const currentText = this.props.texts[this.state.currentTextIndex]\n      .slice(0, this.state.currentLetterIndex)\n\n    return (\n      <div className=\"type-animation__text-area\">\n        <div className=\"type-animation__invisible-text\">\n          {insertLineBreaks(this.props.texts[this.state.largestText])}\n        </div>\n        <div className=\"type-animation__visible-text\">\n          {insertLineBreaks(currentText)}\n          <div className={\"type-animation__caret \" +\n            ((this.state.caretVisible || this.state.caretCooldownVisibility) && \"type-animation__caret--visible\")}\n          >|</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default props =>\n  <TrackVisibility>\n    <TypeAnimation\n      {...props}\n    />\n  </TrackVisibility>\n","import React from 'react'\n\nimport TypeAnimation from 'components/TypeAnimation'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render = () =>\n    <div className=\"description\">\n      <div className=\"container\">\n        <div className=\"description__0\">\n          <TypeAnimation\n            texts={[\"Представьте, что мир полностью изменился…  Попробуйте… Города выглядят иначе: транспорт, архитектура, навигация, нормы поведения, ценности. Деревни трансформировались; экономика, культура, технологии, туризм, блоггинг. Международные отношения эволюционировали; глобальное сообщение, безопасность, исследования, проекты, обмен. Закройте глаза ненадолго, и представьте - прошло много лет и всё изменилось…\"]}\n          />\n        </div>\n\n        <div className=\"description__1\">\n          <TypeAnimation\n            texts={[\"Представили?\"]}\n          />\n        </div>\n\n        <div className=\"description__2\">\n          <TypeAnimation\n            texts={[\"Мы тоже. Это очень эффективное упражнение для того, чтобы почувствовать зазор между привычностью текущего положения вещей и потенциалом изменчивой реальности. Казалось бы, разве театр занимается дорожной обстановкой в городе? Ведь даже ставший уже известным документальный театр чаще стремится найти какой-то выдающийся предмет рефлексии, или остро-актуальный сюжет, завязанный на историческом прецеденте. Мы думаем, что театр обширен, как космос. Он может заниматься чем угодно, потому что во всём есть связь с глобальным миром, с жизнью человеческого духа и смыслом бытия.\"]}\n          />\n        </div>\n\n        <div className=\"description__3\">\n          <TypeAnimation\n            texts={[\"Театр-исследование давно является мировым трендом, да и всегда им был, даже когда родился в пьесе, которая звучала с площадки сцены. Теперь же исследования  бывают очень контрастными по форме, но это всегда погружение в предмет, осознанный взгляд в явление. Дорожная обстановка в городе - это обыденность, в которой нет блеска шоу-бизнеса, бархата актовых залов, таинственности интеллектуального стиля. Но дорожная обстановка в городе так же полна причин и следствий, полна жизни и смерти, то есть - она равноправный материал для искусства. Если этот материал собрать и возвести в форму, может произойти контакт, выводящий на полноту отношений между проектом и вами - пользователи перформанса. Мы - команда проекта - были искренне увлечены, поэтому уверены, что создали нечто, во что можно погрузиться. Надеемся, вы тоже ощутите тот невидимый эфир содержания, который шире сухой статистики и привычки.\"]}\n          />\n        </div>\n\n        <div className=\"description__4\">\n          <TypeAnimation\n            texts={[\"Теперь когда вы представили своим индивидуальным воображением изменившийся мир, представьте, пожалуйста, что у вас в руках продукт этих изменений в том числе.  Именно особый способ упаковки информации предлагается как удовольствие открывать заново казалось бы понятные вещи. Посмотрите на экран, и представьте…\"]}\n          />\n        </div>\n\n        <div className=\"description__5\">\n          <TypeAnimation\n            texts={[\"Представили?\"]}\n          />\n        </div>\n      </div>\n    </div>\n}","import React from 'react'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render = () =>\n    <div className=\"\">\n      \n    </div>\n}","import React from 'react'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render = () =>\n    <div className=\"frame\">\n      <div className=\"frame__corner frame__corner--top frame__corner--top--left\" />\n      <div className=\"frame__corner frame__corner--top frame__corner--top--right\" />\n      <div className=\"frame__corner frame__corner--bottom frame__corner--bottom--left\" />\n      <div className=\"frame__corner frame__corner--bottom frame__corner--bottom--right\" />\n\n      {/* <div className=\"frame__content\"> */}\n        {this.props.children}\n      {/* </div> */}\n    </div>\n}","import React from 'react'\n\nexport default props =>\n  <a\n    className={props.className}\n    href={props.to}\n    target={props.newTab ? \"_blank\" : \"\"}\n    rel=\"noopener noreferrer\"\n    onClick={() => props.changeColor()}\n    onMouseEnter={() => props.changeColor()}\n  >\n    {props.children}\n  </a>","import React from 'react'\n\nimport Frame from 'components/Frame'\nimport ExternalLink from 'components/ExternalLink'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render = () =>\n    <div className=\"container\">\n      <Frame>\n        <div className=\"credits\">\n          <h2>Создатели + ссылки</h2>\n\n          Идея: Антон Томилин\n          <br />\n          Концептмейкеры: <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://instagram.com/arttomilov\">Артём Томилов</ExternalLink> и <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://instagram.com/freestyler_13\">Ваня Наумов</ExternalLink>\n          <br />\n          Съёмка и координация в Тюмени: <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://instagram.com/zurikova\">Ирина Вадачкория</ExternalLink> и <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://vk.com/ignatiev_e\">Евгений Игнатьев</ExternalLink>\n          <br />\n          Дизайнер: <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://instagram.com/wow.desigon\">Анна Сурина</ExternalLink>\n          <br />\n          Чат-бот: <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://instagram.com/igelfanger\">Артём Васич</ExternalLink>\n          <br />\n          Лэндинг: <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://instagram.com/the_sociophobic\">Лев Васильев</ExternalLink>\n          <br />\n          <br />\n          Спасибо за помощь в съёмке <ExternalLink newTab changeColor={this.props.changeColor} to=\"https://instagram.com/aaaa.smr\">Андрею Смирнову</ExternalLink>\n          <br />\n          <br />\n          Участники: Яна Либерман, Марина Либерман, Екатерина Захарчук, Илья Захарчук, Рита Пушкина, Евгений Игнатьев, Алексей Киреев\n        </div>\n      </Frame>\n    </div>\n}","import React from 'react'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render = () =>\n    <div className=\"\">\n      \n    </div>\n}","import React from 'react'\n\nimport Head from 'components/Head'\nimport Header from 'sections/Header'\nimport Description from 'sections/Description'\nimport FAQ from 'sections/FAQ'\nimport Credits from 'sections/Credits'\nimport Start from 'sections/Start'\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isWhite: true\n    }\n  }\n\n  render = () =>\n    <div className={`App App--${this.state.isWhite ? \"white\" : \"black\"}`}>\n      <Head />\n      <Header changeColor={() => this.setState({isWhite: !this.state.isWhite})} />\n      <Description changeColor={() => this.setState({isWhite: !this.state.isWhite})} />\n      <FAQ changeColor={() => this.setState({isWhite: !this.state.isWhite})} />\n      <Credits changeColor={() => this.setState({isWhite: !this.state.isWhite})} />\n      <Start changeColor={() => this.setState({isWhite: !this.state.isWhite})} />\n    </div> \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}